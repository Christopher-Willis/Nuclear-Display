{"version":3,"sources":["components/ElementDisplay.js","components/NuclideDisplay.js","components/PhysicsChemicalDisplay.js","containers/PhysicsChemicalDisplayContainer.js","components/IsotopesDialog.js","actions/index.js","containers/IsotopesDialogContainer.js","components/PeriodicTableGrid.js","containers/PeriodicTableGridContainer.js","components/TopMenu.js","containers/TopMenuContainer.js","App.js","containers/AppContainer.js","serviceWorker.js","reducers/index.js","store.js","index.js"],"names":["ElementDisplay","props","react_default","a","createElement","Card_default","style","backgroundColor","Default","Green","Light Green","Light Blue","Pink Red","Blue","Pale Green","Purple","Yellow","Hot Pink","Light Pink","Deep Green","Salmon","diatomic nonmetal","alkali metal","polyatomic nonmetal","metalloid","noble gas","alkaline earth metal","transition metal","post-transition metal","lanthanide","actinide","unknown, probably transition metal","unknown, predicted to be noble gas","unknown, probably metalloid","unknown, probably post-transition metal","unknown, but predicted to be an alkali metal","unknown, probably metallic","halogen","data","category","filter","CardContent_default","Typography_default","variant","name","color","phase","component","electron_configuration","CardActions_default","Button_default","size","data2","atomicMass","decayConstant","display","PhysChem","_this","this","selectedItem","chemPhySelected","findElement","allElements","find","element","symbol","components_ElementDisplay","findIsotope","allIsotopes","isotope","trim","elementName","replace","slice","elementArrayFind","NuclideDisplay","React","Component","connect","state","elements","nuclides","PhysicsChemicalDisplay","bgColors","colorMap","rand","Math","round","random","getModalStyle","top","left","concat","transform","SimpleModal","clickHandeler","close","_this2","classes","filteredArray","thingArray","index","isotpesFormated","length","console","log","Modal_default","aria-labelledby","aria-describedby","open","onClose","className","paper","map","key","width","margin","padding","Fab_default","onClick","SimpleModalWrapped","withStyles","theme","position","spacing","unit","palette","background","boxShadow","shadows","outline","selectElementIsotope","elementIsotope","type","value","mapDispatchToProps","IsotopeDialog","ReactGridLayout","WidthProvider","RGL","MyFirstGrid","handleClose","setState","cols","rowHeight","data-grid","x","y","w","h","static","PhysicsChemicalDisplayContainer","alignItems","justifyContent","xpos","ypos","Object","defineProperty","IsotopesDialogContainer","theSelectedItem","allNuclides","PeriodicTable","options","TopMenu","anchorEl","handleClickListItem","event","currentTarget","handleMenuItemClick","setMenuIndex","List_default","ListItem_default","button","aria-haspopup","aria-controls","aria-label","ListItemText_default","primary","secondary","selectedIndex","Menu_default","id","Boolean","option","MenuItem_default","selected","App","fetch","urlIsotopes","then","response","json","nuclideObject","addNuclde","urlElements","elementObject","addElement","TopMenuContainer","PeriodicTableGridContainer","process","window","location","hostname","match","reducers","combineReducers","arguments","undefined","action","toConsumableArray","store","createStore","ReactDOM","render","es","AppContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ace7f994.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nfunction ElementDisplay(props) {\n  const bgColors = { \n    \"Default\": \"#81b71a\",\n    \"Green\": \"#009A5A\",\n    \"Light Green\": \"#C3DFA4\",\n    \"Light Blue\": \"#17BED0\",\n    \"Pink Red\": \"#ED1A3B\",\n    \"Blue\": \"#0065B3\",\n    \"Pale Green\":\"#C3DFA4\",\n    \"Purple\":\"#522E92\",\n    \"Yellow\":\"#FFCB05\",\n    \"Hot Pink\":\"#EE3D97\",\n    \"Light Pink\":\"#E1C1CC\",\n    \"Deep Green\":\"#A5CE42\",\n    \"Salmon\":\"#FDDCB1\"\n  };\n  \n  const colorMap = {\n    'diatomic nonmetal': 'Pale Green',\n    'alkali metal':'Green',\n    'polyatomic nonmetal':\"Light Green\",\n    'metalloid': \"Light Blue\",\n    'noble gas': \"Pink Red\",\n    'alkaline earth metal': 'Blue',\n    'transition metal': \"Purple\",\n    'post-transition metal':'Yellow',\n    'lanthanide':\"Hot Pink\",\n    \"actinide\":\"Light Pink\",\n    'unknown, probably transition metal':\"Deep Green\",\n    'unknown, predicted to be noble gas':\"Deep Green\",\n    \"unknown, probably metalloid\":\"Deep Green\",\n    \"unknown, probably post-transition metal\":\"Deep Green\",\n    \"unknown, but predicted to be an alkali metal\":\"Deep Green\",\n    \"unknown, probably metallic\":\"Deep Green\",\n    'halogen':\"Salmon\"\n  }\n\n  return (\n    <Card style={{backgroundColor:bgColors[colorMap[props.data.category]],filter:'brightness(120%) '}}>\n      <CardContent>\n        <Typography variant=\"h6\" >\n          {props.data.name}\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {props.data.phase}\n        </Typography>\n        <Typography component=\"p\">\n          {props.data.electron_configuration}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n    \n  );\n}\nexport default ElementDisplay;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nfunction ElementDisplay(props) {\n  const bgColors = { \n    \"Default\": \"#81b71a\",\n    \"Green\": \"#009A5A\",\n    \"Light Green\": \"#C3DFA4\",\n    \"Light Blue\": \"#17BED0\",\n    \"Pink Red\": \"#ED1A3B\",\n    \"Blue\": \"#0065B3\",\n    \"Pale Green\":\"#C3DFA4\",\n    \"Purple\":\"#522E92\",\n    \"Yellow\":\"#FFCB05\",\n    \"Hot Pink\":\"#EE3D97\",\n    \"Light Pink\":\"#E1C1CC\",\n    \"Deep Green\":\"#A5CE42\",\n    \"Salmon\":\"#FDDCB1\"\n  };\n  \n  const colorMap = {\n    'diatomic nonmetal': 'Pale Green',\n    'alkali metal':'Green',\n    'polyatomic nonmetal':\"Light Green\",\n    'metalloid': \"Light Blue\",\n    'noble gas': \"Pink Red\",\n    'alkaline earth metal': 'Blue',\n    'transition metal': \"Purple\",\n    'post-transition metal':'Yellow',\n    'lanthanide':\"Hot Pink\",\n    \"actinide\":\"Light Pink\",\n    'unknown, probably transition metal':\"Deep Green\",\n    'unknown, predicted to be noble gas':\"Deep Green\",\n    \"unknown, probably metalloid\":\"Deep Green\",\n    \"unknown, probably post-transition metal\":\"Deep Green\",\n    \"unknown, but predicted to be an alkali metal\":\"Deep Green\",\n    \"unknown, probably metallic\":\"Deep Green\",\n    'halogen':\"Salmon\"\n  }\n\n  return (\n    <Card style={{backgroundColor:bgColors[colorMap[props.data2.category]],filter:'brightness(120%) '}}>\n      <CardContent>\n        <Typography variant=\"h6\" >\n          {props.data.name}\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {props.data.atomicMass}\n        </Typography>\n        <Typography component=\"p\">\n          {props.data.decayConstant}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n    \n  );\n}\nexport default ElementDisplay;","import React from 'react';\nimport ElementDisplay from \"./ElementDisplay\"\nimport NuclidesDisplay from \"./NuclideDisplay\"\n\n\nlet display = \"\"\n\n\n\nclass PhysChem extends React.Component {\n  \n    \n  render() \n   { \n    if(this.props.selectedItem && this.props.chemPhySelected===0){\n      const findElement = this.props.allElements.find( (element) => {\n        return element.symbol === this.props.selectedItem; \n      })\n      display=(findElement ? <ElementDisplay data={findElement}/> : \"\")\n    }else if (this.props.selectedItem && this.props.chemPhySelected===1){\n\n\n      const findIsotope = this.props.allIsotopes.find( (isotope) => {\n\n        return isotope.name.trim() === this.props.selectedItem.trim(); \n      })\n\n      let elementName = \"\"\n      if (findIsotope){\n        elementName = findIsotope.name.replace(/[0-9]/g, '')\n        if(elementName[0]=='m'){\n          elementName=elementName.slice(1)\n        }\n      }\n\n      const elementArrayFind = this.props.allElements.find( (element)=> {\n        return elementName == element.symbol\n      })\n\n      \n      display=(findIsotope ? <NuclidesDisplay data2={elementArrayFind} data={findIsotope}/> : \"\")\n    }\n    return (\n      <div>\n        {display}\n      </div>\n    )\n  }\n}\n\n\nexport default PhysChem","import PhysicsChemicalDisplay from \"../components/PhysicsChemicalDisplay\"\nimport { connect } from 'react-redux';\n\n\n\n\nfunction mapStateToProps(state){\n  return {\n    allElements:state.elements,\n    allIsotopes:state.nuclides,\n    selectedItem:state.selectedItem,\n    chemPhySelected:state.chemPhySelected\n  }\n}\n\n\nexport default connect(mapStateToProps)(PhysicsChemicalDisplay);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Fab from '@material-ui/core/Fab';\n\n\nconst bgColors = { \n  \"Default\": \"#81b71a\",\n  \"Green\": \"#009A5A\",\n  \"Light Green\": \"#C3DFA4\",\n  \"Light Blue\": \"#17BED0\",\n  \"Pink Red\": \"#ED1A3B\",\n  \"Blue\": \"#0065B3\",\n  \"Pale Green\":\"#C3DFA4\",\n  \"Purple\":\"#522E92\",\n  \"Yellow\":\"#FFCB05\",\n  \"Hot Pink\":\"#EE3D97\",\n  \"Light Pink\":\"#E1C1CC\",\n  \"Deep Green\":\"#A5CE42\",\n  \"Salmon\":\"#FDDCB1\"\n};\n\nconst colorMap = {\n  'diatomic nonmetal': 'Pale Green',\n  'alkali metal':'Green',\n  'polyatomic nonmetal':\"Light Green\",\n  'metalloid': \"Light Blue\",\n  'noble gas': \"Pink Red\",\n  'alkaline earth metal': 'Blue',\n  'transition metal': \"Purple\",\n  'post-transition metal':'Yellow',\n  'lanthanide':\"Hot Pink\",\n  \"actinide\":\"Light Pink\",\n  'unknown, probably transition metal':\"Deep Green\",\n  'unknown, predicted to be noble gas':\"Deep Green\",\n  \"unknown, probably metalloid\":\"Deep Green\",\n  \"unknown, probably post-transition metal\":\"Deep Green\",\n  \"unknown, but predicted to be an alkali metal\":\"Deep Green\",\n  \"unknown, probably metallic\":\"Deep Green\",\n  'halogen':\"Salmon\"\n}\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n});\n\nclass SimpleModal extends React.Component {\n\n\n\n  clickHandeler = (isotope) => {\n    this.props.selectedItem(isotope.name)\n    this.props.close()\n  }\n\n\n  render() {\n    const { classes } = this.props;\n    let filteredArray = []\n    if(this.props.thingArray){\n      filteredArray = this.props.thingArray.filter((isotope,index) => {\n        let isotpesFormated = isotope.name.replace(/[0-9]/g, '')\n        if(isotpesFormated[0]=='m'){\n          isotpesFormated=isotpesFormated.slice(1)\n        }\n        return isotpesFormated === this.props.element\n        // return isotope.name.replace(/[0-9]/g, ''))\n\n      })\n    }\n\n\n    let elementName = \"\"\n    if (filteredArray.length>0){\n      elementName = filteredArray[0].name.replace(/[0-9]/g, '')\n      if(elementName[0]=='m'){\n        elementName=elementName.slice(1)\n      }\n    }\n\n    const elementArrayFind = this.props.allElements.find( (element)=> {\n      return elementName == element.symbol\n    })\n\n    \n    \n    console.log(elementName);\n    \n    return (\n      <div>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.props.open}\n          onClose={this.props.close}\n        >\n          <div style={getModalStyle()} className={classes.paper}>\n            {filteredArray.map((isotope,index)=>{\n              return <div key={index} style={{backgroundColor: bgColors[colorMap[elementArrayFind.symbol]],display:\"inline-block\",width:\"fit-content\",margin:\"5px\",padding:\"4px\"}}>\n                <Fab onClick={()=>this.clickHandeler(isotope)}>{isotope.name}</Fab>\n              </div>\n            })\n            }\n\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\n// We need an intermediary variable for handling the recursive nesting.\nconst SimpleModalWrapped = withStyles(styles)(SimpleModal);\n\nexport default SimpleModalWrapped;","export function addNuclides(nuclides){\n  return {\n    type:\"ADD_NUCLIDES\",\n    value:nuclides\n  }\n}\n\nexport function addElements(elements){\n  return {\n    type:\"ADD_ELEMENTS\",\n    value:elements\n  }\n}\n\n\nexport function changeMenuChemPhys(index){\n  return {\n    type:\"CHANGE_MENUCHEMPHYS\",\n    value:index\n  }\n}\n\nexport function selectElementIsotope(elementIsotope){\n  return {\n    type:\"CHANGE_ELEMENTISOTOPE\",\n    value:elementIsotope\n  }\n}","import IsotopeDialog from \"../components/IsotopesDialog\"\nimport { connect } from 'react-redux';\nimport {selectElementIsotope} from \"../actions\"\n\n\n\n\nfunction mapStateToProps(state){\n  return {\n    allElements:state.elements,\n  }\n}\n\nconst mapDispatchToProps = {\n  selectedItem:selectElementIsotope,\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(IsotopeDialog);","import React from 'react';\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport Fab from '@material-ui/core/Fab';\nimport PhyChemDisplay from \"../containers/PhysicsChemicalDisplayContainer\"\nimport IsotopesDialog from \"../containers/IsotopesDialogContainer\"\n\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nconst bgColors = { \n  \"Default\": \"#81b71a\",\n  \"Green\": \"#009A5A\",\n  \"Light Green\": \"#C3DFA4\",\n  \"Light Blue\": \"#17BED0\",\n  \"Pink Red\": \"#ED1A3B\",\n  \"Blue\": \"#0065B3\",\n  \"Pale Green\":\"#C3DFA4\",\n  \"Purple\":\"#522E92\",\n  \"Yellow\":\"#FFCB05\",\n  \"Hot Pink\":\"#EE3D97\",\n  \"Light Pink\":\"#E1C1CC\",\n  \"Deep Green\":\"#A5CE42\",\n  \"Salmon\":\"#FDDCB1\"\n};\n\nconst colorMap = {\n  'diatomic nonmetal': 'Pale Green',\n  'alkali metal':'Green',\n  'polyatomic nonmetal':\"Light Green\",\n  'metalloid': \"Light Blue\",\n  'noble gas': \"Pink Red\",\n  'alkaline earth metal': 'Blue',\n  'transition metal': \"Purple\",\n  'post-transition metal':'Yellow',\n  'lanthanide':\"Hot Pink\",\n  \"actinide\":\"Light Pink\",\n  'unknown, probably transition metal':\"Deep Green\",\n  'unknown, predicted to be noble gas':\"Deep Green\",\n  \"unknown, probably metalloid\":\"Deep Green\",\n  \"unknown, probably post-transition metal\":\"Deep Green\",\n  \"unknown, but predicted to be an alkali metal\":\"Deep Green\",\n  \"unknown, probably metallic\":\"Deep Green\",\n  'halogen':\"Salmon\"\n}\n\n// bgColors[colorMap[element.type]]\n// style={{backgroundColor: ()}}\n\n\n\nclass MyFirstGrid extends React.Component {\n  state = {\n    open: false,\n  };\n  clickHandeler(symbol){\n    this.props.selectedItem(symbol)\n    if(this.props.chemPhySelected==1){\n      this.setState({\n        open: true,\n      });\n    }\n  }\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  \n  \n  \n  render() {\n    // layout is an array of objects, see the demo for more complete usage\n\n    //react grid layout should be in app and things should be rending it that grid \n\n    return (\n      <div>\n        <ReactGridLayout className=\"layout\" cols={18} rowHeight={48} >\n          <div key=\"selector\" data-grid={{x:3, y: 0, w: 5, h: 3,static: true}}><PhyChemDisplay/></div>\n          {this.props.allElements.map((element,index)=>{\n            return <div style={{backgroundColor: bgColors[colorMap[element.category]],display:\"flex\",alignItems:\"center\",justifyContent: \"center\"}} key={index} data-grid={{x: element.xpos-1, y: element.ypos-1, w: 1, h: 1, static: true}}>\n              <Fab onClick={() => this.clickHandeler(element.symbol)} style={{backgroundColor: bgColors[colorMap[element.category]],filter: 'brightness(120%)',filter:'hue-rotate(15deg)'}} size=\"small\">{element.symbol}</Fab>\n            </div>\n          })}\n        </ReactGridLayout>\n        <IsotopesDialog open={this.state.open} close={this.handleClose} element={this.props.theSelectedItem} thingArray={this.props.allNuclides}/>\n      </div>\n      \n    )\n  }\n}\n\nexport default MyFirstGrid","import PeriodicTable from \"../components/PeriodicTableGrid.js\"\nimport { connect } from 'react-redux';\nimport {selectElementIsotope} from \"../actions\"\n\n\n\n\nfunction mapStateToProps(state){\n  return {\n    allElements:state.elements,\n    chemPhySelected:state.chemPhySelected,\n    theSelectedItem:state.selectedItem,\n    allNuclides:state.nuclides\n  }\n}\n\nconst mapDispatchToProps = {\n  selectedItem:selectElementIsotope,\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(PeriodicTable);","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n\n\nconst options = [\n  'Chemistry',\n  'Physics',\n];\n\nclass TopMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClickListItem = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleMenuItemClick = (event, index) => {\n    this.setState({ anchorEl: null });\n    this.props.setMenuIndex(index)\n\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n\n    return (\n      <div >\n        <List component=\"nav\">\n          <ListItem\n            button\n            aria-haspopup=\"true\"\n            aria-controls=\"lock-menu\"\n            aria-label=\"Science Mode\"\n            onClick={this.handleClickListItem}\n          >\n            <ListItemText\n              primary=\"Science Mode\"\n              secondary={options[this.props.selectedIndex]}\n            />\n          </ListItem>\n        </List>\n        <Menu\n          id=\"lock-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          {options.map((option, index) => (\n            <MenuItem\n              key={option}\n              selected={index === this.props.selectedIndex}\n              onClick={event => this.handleMenuItemClick(event, index)}\n            >\n              {option}\n            </MenuItem>\n          ))}\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default (TopMenu);\n\n","\nimport { connect } from 'react-redux';\nimport {changeMenuChemPhys} from \"../actions\"\nimport TopMenu from \"../components/TopMenu\"\n\n\n\nconst mapDispatchToProps = {\n  setMenuIndex:changeMenuChemPhys\n}\n\nfunction mapStateToProps(state){\n  return {\n    selectedIndex:state.chemPhySelected\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TopMenu);","import React, { Component } from 'react';\nimport './App.css';\nimport PeriodicTable from \"./containers/PeriodicTableGridContainer\"\nimport TopMenu from \"./containers/TopMenuContainer\"\n\n\n  \n\nclass App extends Component {\n\n  componentDidMount(){\n  fetch(this.props.urlIsotopes)\n    .then((response) =>{\n      return response.json();\n    })\n    .then((nuclideObject) =>{\n      this.props.addNuclde(nuclideObject)\n  });\n  // load all nuclear isotope data to redux\n\n  fetch(this.props.urlElements)\n  .then((response) =>{\n    return response.json();\n  })\n  .then((elementObject) =>{\n    this.props.addElement(elementObject)\n  });\n\n  // loads all element data to redux\n\n  }\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <TopMenu/>\n        </header>\n        <PeriodicTable/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import App from \"../App.js\"\nimport { connect } from 'react-redux';\nimport {addNuclides,addElements} from \"../actions\"\n\n\n\nconst mapDispatchToProps = {\n  addNuclde:addNuclides,\n  addElement:addElements\n}\n\nfunction mapStateToProps(state){\n  return {\n    urlIsotopes:`${process.env.REACT_APP_API_URL}/isotopes`,\n    urlElements:`${process.env.REACT_APP_API_URL}/elements`,\n    allNuclides:state.nuclides,\n    allElements:state.elements\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\n\nfunction nuclides(state=[], action){\n  if(action.type === \"ADD_NUCLIDES\"){\n    return [...state,...action.value]\n  }\n  return state;\n}   \n\nfunction elements(state=[], action){\n  if(action.type === \"ADD_ELEMENTS\"){\n    return [...state,...action.value]\n  }\n  return state;\n}   \n\nfunction selectedItem(state=\"\",action){\n  if(action.type === \"CHANGE_ELEMENTISOTOPE\"){\n    return action.value\n  }\n  return state\n}\n\nfunction chemPhySelected(state=0,action){\n  if(action.type === \"CHANGE_MENUCHEMPHYS\"){\n    return action.value\n  }\n  return state\n}\n\nconst reducers = combineReducers({\n  nuclides,elements,selectedItem,chemPhySelected\n})\n\nexport default reducers;","import {createStore} from 'redux';\nimport reducers from \"./reducers\";\n\nconst state = {}\n\nvar store = createStore(reducers,state);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/AppContainer';\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store\"\n\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}